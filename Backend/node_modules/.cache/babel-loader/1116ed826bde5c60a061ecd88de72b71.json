{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sproutstudent/Desktop/react-master 2/Exercises/exercise-9.1/src/components/forms/ReviewForm.js\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst ReviewForm = ({\n  bookId,\n  addReview\n}) => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    content: ''\n  },\n  validate: values => {\n    const errors = {};\n\n    if (!values.content) {\n      errors.content = 'Review cannot be empty';\n    } else if (values.content.length < 5) {\n      errors.content = 'Review must be at least 5 characters';\n    }\n\n    return errors;\n  },\n  onSubmit: (values, {\n    resetForm\n  }) => {\n    const review = {\n      bookId,\n      content: values.content\n    };\n    addReview(review).then(() => {\n      resetForm();\n    });\n  },\n  children: ({\n    isSubmitting\n  }) => /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-group form-inline\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"control-label\",\n      children: [\"Review:\", /*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"content\",\n        as: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: isSubmitting,\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: \"content\",\n      className: \"alert alert-danger\",\n      component: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 5\n}, this);\n\n_c = ReviewForm;\nReviewForm.propTypes = {\n  bookId: PropTypes.number.isRequired\n};\nexport default ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/Users/sproutstudent/Desktop/react-master 2/Exercises/exercise-9.1/src/components/forms/ReviewForm.js"],"names":["Formik","Form","Field","ErrorMessage","PropTypes","ReviewForm","bookId","addReview","content","values","errors","length","resetForm","review","then","isSubmitting","propTypes","number","isRequired"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,kBACf,QAAC,MAAD;AACI,EAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE;AADE,GADnB;AAII,EAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,UAAMC,MAAM,GAAG,EAAf;;AACA,QAAI,CAACD,MAAM,CAACD,OAAZ,EAAqB;AACjBE,MAAAA,MAAM,CAACF,OAAP,GAAiB,wBAAjB;AACH,KAFD,MAEO,IAAIC,MAAM,CAACD,OAAP,CAAeG,MAAf,GAAwB,CAA5B,EAA+B;AAClCD,MAAAA,MAAM,CAACF,OAAP,GAAiB,sCAAjB;AACH;;AACD,WAAOE,MAAP;AACH,GAZL;AAaI,EAAA,QAAQ,EAAE,CAACD,MAAD,EAAS;AAAEG,IAAAA;AAAF,GAAT,KAA2B;AACjC,UAAMC,MAAM,GAAG;AACXP,MAAAA,MADW;AAEXE,MAAAA,OAAO,EAAEC,MAAM,CAACD;AAFL,KAAf;AAIAD,IAAAA,SAAS,CAACM,MAAD,CAAT,CAAkBC,IAAlB,CAAuB,MAAM;AACzBF,MAAAA,SAAS;AACZ,KAFD;AAGH,GArBL;AAAA,YAuBK,CAAC;AAAEG,IAAAA;AAAF,GAAD,kBACG,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA,yCACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,SAAjD;AAA2D,QAAA,EAAE,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,QAAQ,EAAEA,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAC,oBAAvC;AAA4D,MAAA,SAAS,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBR;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMV,U;AAuCNA,UAAU,CAACW,SAAX,GAAuB;AACnBV,EAAAA,MAAM,EAAEF,SAAS,CAACa,MAAV,CAAiBC;AADN,CAAvB;AAIA,eAAeb,UAAf","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst ReviewForm = ({ bookId, addReview }) => (\n    <Formik\n        initialValues={{\n            content: ''\n        }}\n        validate={values => {\n            const errors = {};\n            if (!values.content) {\n                errors.content = 'Review cannot be empty';\n            } else if (values.content.length < 5) {\n                errors.content = 'Review must be at least 5 characters';\n            }\n            return errors;\n        }}\n        onSubmit={(values, { resetForm }) => {\n            const review = {\n                bookId,\n                content: values.content\n            }\n            addReview(review).then(() => {\n                resetForm();\n            });\n        }}\n    >\n        {({ isSubmitting }) => (\n            <Form className=\"form-group form-inline\">\n                <label className=\"control-label\">Review:\n                    <Field type=\"text\" className=\"form-control\" name=\"content\" as=\"textarea\" />\n                </label>\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Add Review</button>\n                <ErrorMessage name=\"content\" className=\"alert alert-danger\" component=\"div\" />\n            </Form>\n\n\n        )}\n    </Formik>\n)\n\n\nReviewForm.propTypes = {\n    bookId: PropTypes.number.isRequired\n};\n\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}