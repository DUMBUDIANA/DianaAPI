{"ast":null,"code":"var _jsxFileName = \"/Users/sproutstudent/Desktop/bookreactions/project/src/components/forms/ReviewForm.js\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReviewForm = _ref => {\n  let {\n    bookId,\n    addReview\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      content: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.content) {\n        errors.content = 'Review cannot be empty';\n      } else if (values.content.length < 5) {\n        errors.content = 'Review must be at least 5 characters';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, _ref2) => {\n      let {\n        resetForm\n      } = _ref2;\n      const review = {\n        bookId,\n        content: values.content\n      };\n      addReview(review).then(() => {\n        resetForm();\n      });\n    },\n    children: _ref3 => {\n      let {\n        isSubmitting\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form-group form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control-label\",\n          children: [\"Review:\", /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"content\",\n            as: \"textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isSubmitting,\n          children: \"Add Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"content\",\n          className: \"alert alert-danger\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ReviewForm;\nReviewForm.propTypes = {\n  bookId: PropTypes.number.isRequired\n};\nexport default ReviewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"sources":["/Users/sproutstudent/Desktop/bookreactions/project/src/components/forms/ReviewForm.js"],"names":["Formik","Form","Field","ErrorMessage","PropTypes","ReviewForm","bookId","addReview","content","values","errors","length","resetForm","review","then","isSubmitting","propTypes","number","isRequired"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD;AAAA,sBACf,QAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,OAAO,EAAE;AADE,KADnB;AAII,IAAA,QAAQ,EAAEC,MAAM,IAAI;AAChB,YAAMC,MAAM,GAAG,EAAf;;AACA,UAAI,CAACD,MAAM,CAACD,OAAZ,EAAqB;AACjBE,QAAAA,MAAM,CAACF,OAAP,GAAiB,wBAAjB;AACH,OAFD,MAEO,IAAIC,MAAM,CAACD,OAAP,CAAeG,MAAf,GAAwB,CAA5B,EAA+B;AAClCD,QAAAA,MAAM,CAACF,OAAP,GAAiB,sCAAjB;AACH;;AACD,aAAOE,MAAP;AACH,KAZL;AAaI,IAAA,QAAQ,EAAE,CAACD,MAAD,YAA2B;AAAA,UAAlB;AAAEG,QAAAA;AAAF,OAAkB;AACjC,YAAMC,MAAM,GAAG;AACXP,QAAAA,MADW;AAEXE,QAAAA,OAAO,EAAEC,MAAM,CAACD;AAFL,OAAf;AAIAD,MAAAA,SAAS,CAACM,MAAD,CAAT,CAAkBC,IAAlB,CAAuB,MAAM;AACzBF,QAAAA,SAAS;AACZ,OAFD;AAGH,KArBL;AAAA,cAuBK;AAAA,UAAC;AAAEG,QAAAA;AAAF,OAAD;AAAA,0BACG,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAA,6CACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AAA4C,YAAA,IAAI,EAAC,SAAjD;AAA2D,YAAA,EAAE,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,QAAQ,EAAEA,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAC,oBAAvC;AAA4D,UAAA,SAAS,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AAAA;AAvBL;AAAA;AAAA;AAAA;AAAA,UADe;AAAA,CAAnB;;KAAMV,U;AAuCNA,UAAU,CAACW,SAAX,GAAuB;AACnBV,EAAAA,MAAM,EAAEF,SAAS,CAACa,MAAV,CAAiBC;AADN,CAAvB;AAIA,eAAeb,UAAf","sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst ReviewForm = ({ bookId, addReview }) => (\n    <Formik\n        initialValues={{\n            content: ''\n        }}\n        validate={values => {\n            const errors = {};\n            if (!values.content) {\n                errors.content = 'Review cannot be empty';\n            } else if (values.content.length < 5) {\n                errors.content = 'Review must be at least 5 characters';\n            }\n            return errors;\n        }}\n        onSubmit={(values, { resetForm }) => {\n            const review = {\n                bookId,\n                content: values.content\n            }\n            addReview(review).then(() => {\n                resetForm();\n            });\n        }}\n    >\n        {({ isSubmitting }) => (\n            <Form className=\"form-group form-inline\">\n                <label className=\"control-label\">Review:\n                    <Field type=\"text\" className=\"form-control\" name=\"content\" as=\"textarea\" />\n                </label>\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Add Review</button>\n                <ErrorMessage name=\"content\" className=\"alert alert-danger\" component=\"div\" />\n            </Form>\n\n\n        )}\n    </Formik>\n)\n\n\nReviewForm.propTypes = {\n    bookId: PropTypes.number.isRequired\n};\n\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}